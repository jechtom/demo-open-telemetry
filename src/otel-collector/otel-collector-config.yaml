receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  prometheus/own_metrics:
    config:
      scrape_configs:
        - job_name: otel-collector
          scrape_interval: 10s
          static_configs:
            - targets: [0.0.0.0:8888]

processors:
  batch:

exporters:
  otlp/debug:
    endpoint: otlp-debugger:8080
    tls:
      insecure: true

  otlphttp/prometheus:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true

  otlphttp/seq:
    endpoint: http://seq:80/ingest/otlp
    tls:
      insecure: true

  otlp/jaeger:
    endpoint: jaeger:4317
    tls:
      insecure: true

  debug:
    verbosity: detailed

  # azuremonitor:
  #   connection_string: ${env:APPLICATIONINSIGHTS_CONNECTION_STRING}

  prometheus:
    endpoint: 0.0.0.0:8889
    send_timestamps: true
    metric_expiration: 180m
    enable_open_metrics: true
    add_metric_suffixes: false
    resource_to_telemetry_conversion:
      enabled: true

  zipkin:
    endpoint: "http://zipkin:9411/api/v2/spans"
    format: proto

extensions:
  health_check:
  pprof:
  zpages:

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/debug, otlphttp/seq, otlp/jaeger, zipkin]
    metrics:
      receivers: [otlp, prometheus/own_metrics]
      processors: [batch]
      exporters: [otlp/debug, prometheus, otlphttp/prometheus]
    logs:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/debug, otlphttp/seq]